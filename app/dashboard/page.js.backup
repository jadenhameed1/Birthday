'use client'
import { useSession } from 'next-auth/react'
import { redirect } from 'next/navigation'
import { useState, useEffect } from 'react'
import { supabase } from '@/lib/supabase'
import DashboardNav from '@/components/DashboardNav'

export default function Dashboard() {
  const { data: session, status } = useSession()
  const [messages, setMessages] = useState([])
  const [input, setInput] = useState('')
  const [isLoading, setIsLoading] = useState(false)
  const [conversationId, setConversationId] = useState(null)

  if (status === 'loading') return <div className="min-h-screen bg-gray-50 flex items-center justify-center">Loading...</div>
  if (!session) redirect('/auth/signin')

  // Load conversation history
  useEffect(() => {
    loadOrCreateConversation()
  }, [])

  const loadOrCreateConversation = async () => {
    try {
      const { data: conversations } = await supabase
        .from('conversations')
        .select('*')
        .order('created_at', { ascending: false })
        .limit(1)

      if (conversations?.length > 0) {
        setConversationId(conversations[0].id)
        const { data: messages } = await supabase
          .from('messages')
          .select('*')
          .eq('conversation_id', conversations[0].id)
          .order('created_at', { ascending: true })
        if (messages) setMessages(messages)
      } else {
        const { data: newConversation } = await supabase
          .from('conversations')
          .insert([{ title: 'Business Strategy' }])
          .select()
          .single()
        if (newConversation) setConversationId(newConversation.id)
      }
    } catch (error) {
      console.error('Error loading conversation:', error)
    }
  }

  const sendMessage = async () => {
    if (!input.trim()) return

    const userMessage = { role: 'user', content: input, created_at: new Date() }
    setMessages(prev => [...prev, userMessage])
    setInput('')
    setIsLoading(true)

    // Save user message
    if (conversationId) {
      await supabase.from('messages').insert([{
        conversation_id: conversationId,
        role: 'user',
        content: input
      }])
    }

    // USE THE BULLETPROOF RESPONSE ENGINE
    setTimeout(async () => {
      const aiMessage = { role: 'assistant', content: response, created_at: new Date() }
      
      // Save AI response
      if (conversationId) {
        await supabase.from('messages').insert([{
          conversation_id: conversationId,
          role: 'assistant',
          content: response
        }])
      }

      setMessages(prev => [...prev, aiMessage])
      setIsLoading(false)
    }, 800) // Simulate thinking time
  }

  return (
    <div className="min-h-screen bg-gray-50">
      <DashboardNav />
      <div className="max-w-4xl mx-auto py-8 px-4">
        <div className="bg-white rounded-lg shadow-lg overflow-hidden">
          <div className="p-6 border-b bg-gradient-to-r from-blue-600 to-purple-600 text-white">
            <h1 className="text-2xl font-bold">AI Business Strategist</h1>
            <p className="opacity-90">Get specific, actionable advice for your marketplace</p>
          </div>
          
          <div className="h-96 overflow-y-auto p-6 space-y-4 bg-gray-50">
            {messages.length === 0 ? (
              <div className="text-center py-8">
                <div className="bg-white rounded-lg p-6 shadow-sm border">
                  <h3 className="text-lg font-semibold mb-4">ðŸŽ¯ Ask Me Specific Business Questions:</h3>
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-3 text-sm">
                    <button onClick={() => setInput("What pricing model should I use?")} className="p-3 bg-blue-50 rounded-lg hover:bg-blue-100 border border-blue-200 text-left">
                      <span className="font-medium">ðŸ’° Pricing:</span><br/>
                      "What pricing model should I use?"
                    </button>
                    <button onClick={() => setInput("How do I acquire customers?")} className="p-3 bg-green-50 rounded-lg hover:bg-green-100 border border-green-200 text-left">
                      <span className="font-medium">ðŸ“ˆ Growth:</span><br/>
                      "How do I acquire customers?"
                    </button>
                    <button onClick={() => setInput("How do I stand out from competitors?")} className="p-3 bg-purple-50 rounded-lg hover:bg-purple-100 border border-purple-200 text-left">
                      <span className="font-medium">âš¡ Competition:</span><br/>
                      "How do I stand out?"
                    </button>
                    <button onClick={() => setInput("What revenue streams work best?")} className="p-3 bg-orange-50 rounded-lg hover:bg-orange-100 border border-orange-200 text-left">
                      <span className="font-medium">ðŸ’¸ Revenue:</span><br/>
                      "What revenue streams work?"
                    </button>
                  </div>
                </div>
              </div>
            ) : (
              messages.map((message, index) => (
                <div key={index} className={`flex ${message.role === 'user' ? 'justify-end' : 'justify-start'}`}>
                  <div className={`max-w-xs md:max-w-md px-4 py-3 rounded-lg ${
                    message.role === 'user' 
                      ? 'bg-blue-500 text-white shadow-sm' 
                      : 'bg-white border border-gray-200 shadow-sm text-gray-800'
                  }`}>
                    <div className="whitespace-pre-line">{message.content}</div>
                  </div>
                </div>
              ))
            )}
            {isLoading && (
              <div className="flex justify-start">
                <div className="bg-white border border-gray-200 px-4 py-3 rounded-lg shadow-sm">
                  <div className="flex items-center space-x-2 text-gray-600">
                    <div className="w-2 h-2 bg-blue-500 rounded-full animate-bounce"></div>
                    <div className="w-2 h-2 bg-blue-500 rounded-full animate-bounce" style={{animationDelay: '0.2s'}}></div>
                    <div className="w-2 h-2 bg-blue-500 rounded-full animate-bounce" style={{animationDelay: '0.4s'}}></div>
                    <span className="text-sm">Analyzing your business...</span>
                  </div>
                </div>
              </div>
            )}
          </div>
          
          <div className="p-4 border-t bg-white">
            <div className="flex space-x-3">
              <input
                type="text"
                value={input}
                onChange={(e) => setInput(e.target.value)}
                onKeyPress={(e) => e.key === 'Enter' && sendMessage()}
                placeholder="Ask about pricing, growth, competition, revenue..."
                className="flex-1 px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
              />
              <button
                onClick={sendMessage}
                disabled={isLoading || !input.trim()}
                className="px-6 py-3 bg-blue-500 text-white rounded-lg hover:bg-blue-600 disabled:opacity-50 font-medium transition-colors"
              >
                Send
              </button>
            </div>
            <div className="flex flex-wrap gap-2 mt-3">
              <button onClick={() => setInput("What's the best pricing strategy?")} className="text-xs bg-blue-100 text-blue-700 px-2 py-1 rounded hover:bg-blue-200">Pricing</button>
              <button onClick={() => setInput("How to get more customers?")} className="text-xs bg-green-100 text-green-700 px-2 py-1 rounded hover:bg-green-200">Growth</button>
              <button onClick={() => setInput("How to beat competitors?")} className="text-xs bg-purple-100 text-purple-700 px-2 py-1 rounded hover:bg-purple-200">Competition</button>
              <button onClick={() => setInput("Revenue optimization tips?")} className="text-xs bg-orange-100 text-orange-700 px-2 py-1 rounded hover:bg-orange-200">Revenue</button>
            </div>
          </div>
        </div>
      </div>
    </div>
  )
}
